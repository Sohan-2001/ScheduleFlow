// This is an autogenerated file from running `firebase genkit:flow`.
'use server';

/**
 * @fileOverview Recommends sellers based on buyer needs.
 *
 * - recommendSellers - A function that recommends sellers based on a description of buyer needs.
 * - RecommendSellersInput - The input type for the recommendSellers function.
 * - RecommendSellersOutput - The output type for the recommendSellers function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendSellersInputSchema = z.object({
  needsDescription: z
    .string()
    .describe('A description of the buyer\'s needs and preferences.'),
});
export type RecommendSellersInput = z.infer<typeof RecommendSellersInputSchema>;

const RecommendSellersOutputSchema = z.object({
  recommendations: z
    .array(z.string())
    .describe('A list of recommended seller names.'),
});
export type RecommendSellersOutput = z.infer<typeof RecommendSellersOutputSchema>;

export async function recommendSellers(input: RecommendSellersInput): Promise<RecommendSellersOutput> {
  return recommendSellersFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendSellersPrompt',
  input: {schema: RecommendSellersInputSchema},
  output: {schema: RecommendSellersOutputSchema},
  prompt: `You are an expert recommendation system specializing in connecting buyers with the most suitable sellers.

  Given the following description of the buyer's needs, identify the sellers from the list below that best match those needs.

  Buyer Needs: {{{needsDescription}}}

  Available Sellers: Pre-populated list.

  Return a list of the names of the recommended sellers.
  `,
});

const recommendSellersFlow = ai.defineFlow(
  {
    name: 'recommendSellersFlow',
    inputSchema: RecommendSellersInputSchema,
    outputSchema: RecommendSellersOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
